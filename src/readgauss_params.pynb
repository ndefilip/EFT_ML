{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1ec65203",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os,sys\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ca66fd6a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      klambda        CT       CTT      CGHH     CGGHH\n",
      "0    1.824486  3.617048  0.596670 -0.692940 -2.819527\n",
      "1    0.305763  2.157825 -1.531478  0.493841 -1.881899\n",
      "2    1.493947 -0.761028  3.452457 -4.359866 -0.808658\n",
      "3    0.186852  5.340556  1.049610 -0.504611 -0.020435\n",
      "4    1.109340  1.377494  1.615746 -0.346222  0.141523\n",
      "..        ...       ...       ...       ...       ...\n",
      "995  0.136267  3.113135  1.527936  1.274083 -0.067475\n",
      "996  4.323204  1.024999  0.140441 -1.216946 -3.884088\n",
      "997  3.436499 -2.536035 -0.222012  2.668240 -2.155979\n",
      "998  3.101796  0.682006  3.120703 -2.160497 -0.270131\n",
      "999  1.031319 -2.731225  0.399142 -0.579459  0.570485\n",
      "\n",
      "[1000 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "dftotal = {}\n",
    "dftotal = pd.DataFrame()\n",
    "\n",
    "dftotal = pd.read_csv('../data/powheg_gauss_param.csv')\n",
    "\n",
    "print(dftotal)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c60edd41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel('$\\kappa_\\lambda$')\n",
    "X = np.linspace(-9.,11.,100)\n",
    "dftotal['klambda'].plot.hist( bins=X,histtype='step', density=1 )\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e0f280c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel('$c_t$')\n",
    "X = np.linspace(-9.,11.,100)\n",
    "dftotal['CT'].plot.hist( bins=X,histtype='step', density=1 )\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "427a71cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel('$c_{tt}$')\n",
    "X = np.linspace(-10.,10.,100)\n",
    "dftotal['CTT'].plot.hist( bins=X,histtype='step', density=1 )\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a2cfb4c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.xlabel('$c_{ghh}$')\n",
    "X = np.linspace(-10.,10.,100)\n",
    "dftotal['CGHH'].plot.hist( bins=X,histtype='step', density=1 )\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6758b54d",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.xlabel('$c_{gghh}$')\n",
    "X = np.linspace(-10.,10.,100)\n",
    "dftotal['CGGHH'].plot.hist( bins=X,histtype='step', density=1 )\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "639de52c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
